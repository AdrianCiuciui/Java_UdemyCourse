// Checks if a number is Palindrome ----------------------------

    public static boolean isPalindrome (int number) {

        int number2 = number, numberReversed = 0;
        if (number2 < 0) number2 *= -1;
        while (number2 > 0) {
            numberReversed += number2 % 10;
            numberReversed *= 10;
            number2 /= 10;
        }
        numberReversed /= 10;

        if (number == numberReversed || (-1 * number == numberReversed)) {
            System.out.println ("This is a palindrome " + number);
            return true;
            }
        System.out.println ("This is not a palindrome " + number);
        return false;
    }

// Adds the First and Last digits of a positive number -----------------

    public static int sumFirstAndLastDigit (int number) {
        int number2 = number;
        if (number < 0) {
            System.out.println ("Negative number");
            return -1;
        }
        int lastDigit = number % 10, firstDigit = 0;

        while (number > 0) {
            firstDigit = number % 10;
            number /= 10;
        }

        System.out.println ("Sum of digits for " + number2);
        return (firstDigit + lastDigit);
    }

// This code will sum up all Even digits withing a number -------------------

    public static int getEvenDigitSum (int number) {
        if (number < 0) return -1;
        int number2 = number, sumOfEvens = 0;
        while (number2 > 0) {
            if (number2 % 2 == 0) {
                sumOfEvens += (number2 % 10);
            }
        number2 /= 10;
        }
        System.out.println ("Sum of evens for " + number +" is " + sumOfEvens);
        return sumOfEvens;
    }

//    This code wil return true if 2 numbers have any common digits ----------------

    public static boolean hasSharedDigit (int number1, int number2) {
        if ((number1 > 99) || (number1 < 10) || (number2 > 99) || (number2 < 10)) return false;
        int number2Backup = number2;

        while (number1 > 0) {
            int number1Digit = number1 % 10;
            while (number2 > 0) {
                int newNumber2 = number2 % 10;
                if (newNumber2 == number1Digit) {
                    System.out.println ("Shared digit is: " + number1Digit + " for " + number2Backup);
                    return true;
                }
                number2 /= 10;
            }
            number2 = number2Backup;
            number1 /= 10;
        }

        return false;
    }
